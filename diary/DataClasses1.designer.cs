#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace diary
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Diary")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertDiary_Linq(Diary_Linq instance);
    partial void UpdateDiary_Linq(Diary_Linq instance);
    partial void DeleteDiary_Linq(Diary_Linq instance);
    partial void InsertUsers_Linq(Users_Linq instance);
    partial void UpdateUsers_Linq(Users_Linq instance);
    partial void DeleteUsers_Linq(Users_Linq instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DiaryConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Diary_Linq> Diary_Linq
		{
			get
			{
				return this.GetTable<Diary_Linq>();
			}
		}
		
		public System.Data.Linq.Table<Users_Linq> Users_Linq
		{
			get
			{
				return this.GetTable<Users_Linq>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Diary")]
	public partial class Diary_Linq : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _diary_id;
		
		private string _diary_title;
		
		private string _diary_content;
		
		private string _diary_subtime;
		
		private int _diary_author_id;
		
		private EntityRef<Users_Linq> _Users_Linq;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondiary_idChanging(int value);
    partial void Ondiary_idChanged();
    partial void Ondiary_titleChanging(string value);
    partial void Ondiary_titleChanged();
    partial void Ondiary_contentChanging(string value);
    partial void Ondiary_contentChanged();
    partial void Ondiary_subtimeChanging(string value);
    partial void Ondiary_subtimeChanged();
    partial void Ondiary_author_idChanging(int value);
    partial void Ondiary_author_idChanged();
    #endregion
		
		public Diary_Linq()
		{
			this._Users_Linq = default(EntityRef<Users_Linq>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diary_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int diary_id
		{
			get
			{
				return this._diary_id;
			}
			set
			{
				if ((this._diary_id != value))
				{
					this.Ondiary_idChanging(value);
					this.SendPropertyChanging();
					this._diary_id = value;
					this.SendPropertyChanged("diary_id");
					this.Ondiary_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diary_title", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string diary_title
		{
			get
			{
				return this._diary_title;
			}
			set
			{
				if ((this._diary_title != value))
				{
					this.Ondiary_titleChanging(value);
					this.SendPropertyChanging();
					this._diary_title = value;
					this.SendPropertyChanged("diary_title");
					this.Ondiary_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diary_content", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string diary_content
		{
			get
			{
				return this._diary_content;
			}
			set
			{
				if ((this._diary_content != value))
				{
					this.Ondiary_contentChanging(value);
					this.SendPropertyChanging();
					this._diary_content = value;
					this.SendPropertyChanged("diary_content");
					this.Ondiary_contentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diary_subtime", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string diary_subtime
		{
			get
			{
				return this._diary_subtime;
			}
			set
			{
				if ((this._diary_subtime != value))
				{
					this.Ondiary_subtimeChanging(value);
					this.SendPropertyChanging();
					this._diary_subtime = value;
					this.SendPropertyChanged("diary_subtime");
					this.Ondiary_subtimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diary_author_id", DbType="Int NOT NULL")]
		public int diary_author_id
		{
			get
			{
				return this._diary_author_id;
			}
			set
			{
				if ((this._diary_author_id != value))
				{
					if (this._Users_Linq.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondiary_author_idChanging(value);
					this.SendPropertyChanging();
					this._diary_author_id = value;
					this.SendPropertyChanged("diary_author_id");
					this.Ondiary_author_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Diary", Storage="_Users_Linq", ThisKey="diary_author_id", OtherKey="user_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Users_Linq Users_Linq
		{
			get
			{
				return this._Users_Linq.Entity;
			}
			set
			{
				Users_Linq previousValue = this._Users_Linq.Entity;
				if (((previousValue != value) 
							|| (this._Users_Linq.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users_Linq.Entity = null;
						previousValue.Diary_Linq.Remove(this);
					}
					this._Users_Linq.Entity = value;
					if ((value != null))
					{
						value.Diary_Linq.Add(this);
						this._diary_author_id = value.user_id;
					}
					else
					{
						this._diary_author_id = default(int);
					}
					this.SendPropertyChanged("Users_Linq");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Users_Linq : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private string _user_name;
		
		private string _user_password;
		
		private string _email;
		
		private string _qq;
		
		private string _wechat;
		
		private string _birthday;
		
		private string _sex;
		
		private string _hometown;
		
		private string _introduce;
		
		private EntitySet<Diary_Linq> _Diary_Linq;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void Onuser_passwordChanging(string value);
    partial void Onuser_passwordChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnqqChanging(string value);
    partial void OnqqChanged();
    partial void OnwechatChanging(string value);
    partial void OnwechatChanged();
    partial void OnbirthdayChanging(string value);
    partial void OnbirthdayChanged();
    partial void OnsexChanging(string value);
    partial void OnsexChanged();
    partial void OnhometownChanging(string value);
    partial void OnhometownChanged();
    partial void OnintroduceChanging(string value);
    partial void OnintroduceChanged();
    #endregion
		
		public Users_Linq()
		{
			this._Diary_Linq = new EntitySet<Diary_Linq>(new Action<Diary_Linq>(this.attach_Diary_Linq), new Action<Diary_Linq>(this.detach_Diary_Linq));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_password", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string user_password
		{
			get
			{
				return this._user_password;
			}
			set
			{
				if ((this._user_password != value))
				{
					this.Onuser_passwordChanging(value);
					this.SendPropertyChanging();
					this._user_password = value;
					this.SendPropertyChanged("user_password");
					this.Onuser_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(30)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qq", DbType="VarChar(11)")]
		public string qq
		{
			get
			{
				return this._qq;
			}
			set
			{
				if ((this._qq != value))
				{
					this.OnqqChanging(value);
					this.SendPropertyChanging();
					this._qq = value;
					this.SendPropertyChanged("qq");
					this.OnqqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wechat", DbType="NVarChar(20)")]
		public string wechat
		{
			get
			{
				return this._wechat;
			}
			set
			{
				if ((this._wechat != value))
				{
					this.OnwechatChanging(value);
					this.SendPropertyChanging();
					this._wechat = value;
					this.SendPropertyChanged("wechat");
					this.OnwechatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="VarChar(10)")]
		public string birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="NVarChar(1)")]
		public string sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hometown", DbType="NVarChar(20)")]
		public string hometown
		{
			get
			{
				return this._hometown;
			}
			set
			{
				if ((this._hometown != value))
				{
					this.OnhometownChanging(value);
					this.SendPropertyChanging();
					this._hometown = value;
					this.SendPropertyChanged("hometown");
					this.OnhometownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_introduce", DbType="NVarChar(200)")]
		public string introduce
		{
			get
			{
				return this._introduce;
			}
			set
			{
				if ((this._introduce != value))
				{
					this.OnintroduceChanging(value);
					this.SendPropertyChanging();
					this._introduce = value;
					this.SendPropertyChanged("introduce");
					this.OnintroduceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Diary", Storage="_Diary_Linq", ThisKey="user_id", OtherKey="diary_author_id")]
		public EntitySet<Diary_Linq> Diary_Linq
		{
			get
			{
				return this._Diary_Linq;
			}
			set
			{
				this._Diary_Linq.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Diary_Linq(Diary_Linq entity)
		{
			this.SendPropertyChanging();
			entity.Users_Linq = this;
		}
		
		private void detach_Diary_Linq(Diary_Linq entity)
		{
			this.SendPropertyChanging();
			entity.Users_Linq = null;
		}
	}
}
#pragma warning restore 1591
